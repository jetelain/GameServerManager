@model Modset

@{
    ViewData["Title"] = Model.Label;
}

@section NavBar {
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a asp-action="Index">Modpacks</a></li>
            <li class="breadcrumb-item active" aria-current="page">@ViewData["Title"]</li>
        </ol>
    </nav> }

@section Title { <h1><span>@ViewData["Title"]</span></h1> }

<div>
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Label)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Label)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Count)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Count)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.LastUpdate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.LastUpdate)
        </dd>
        <dt class="col-sm-2">
            Taille (Mo)
        </dt>
        <dd class="col-sm-10">
            @Math.Round(Model.Servers.Max(srv => srv.Mods.Sum(m => m.Size)) / 1024.0 / 1024.0, 2).ToString("#,0")
        </dd>
    </dl>
</div>
<p>
    <a class="btn btn-outline-secondary" asp-action="Edit" asp-route-id="@Model.ModsetID">Modifier</a>
</p>

@foreach(var server in Model.Servers)
{
    var canBeInstalled = server.Mods.Where(m => m.Installed == null && !string.IsNullOrEmpty(m.SteamId)).Select(m => m.SteamId).ToList();
    @if (canBeInstalled.Count > 0)
    {
        <form asp-controller="AdminMods" asp-action="Add" asp-route-id="@server.HostServer.HostServerID" method="post">
            <input type="hidden" name="mods" value="@string.Join('\n', canBeInstalled)" />
            <button class="btn btn-primary">Installer les mods manquants</button>
        </form>
    }

    <table class="table">
        <tr>
            <th>Id</th>
            <th>Nom</th>
            <th class="text-right">Taille (Mo)</th>
            <th></th>
        </tr>
        @foreach(var mod in server.Mods.OrderByDescending(m => m.Installed == null).ThenByDescending(m => m.Size))
        {
            <tr>
                <td>@mod.SteamId</td>
                <td><a href="@mod.Href">@mod.Name</a></td>
                <td class="text-right">
                    @if (mod.Installed != null)
                    {
                        @Math.Round(mod.Size / 1024.0 / 1024.0, 2).ToString("#,0.00")
                    }
                </td>
                <td>
                    @if (string.IsNullOrEmpty(mod.SteamId))
                    {
                        @:Non disponible sur le Workshop
                    }
                    else if (mod.Installed == null)
                    {
                        @:Non installé sur le serveur
                    }
                </td>
            </tr>
        }
    </table>
}
